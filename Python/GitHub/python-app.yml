# Put this file in GitHub: (Repository)/.github/workflows/python-app.yml

# Name of the GitHub Action Workflow
name: Python Application - GitHub Action Workflow

# The run name for workflow runs
run-name: GitHub Run ID (${{ github.run_id }}) by (@${{ github.actor }})

# Event trigger, in this case push/pull to the main branch
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Pemissions, contents: read permits an action to list the commits
permissions:
  contents: read

# Workflow starts here
jobs:
  build:

    # Uses the latest ubuntu version
    runs-on: ubuntu-latest
    # Tests against multiple python versions
    strategy:
      matrix:
        # Last updated: 2024/03/22
        python-version: ["pypy3.9", "pypy3.10", "3.9", "3.10", "3.11", "3.12"]

    steps:
      # Checks out the repository
      - uses: actions/checkout@v4
      # Installs Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          # You can test your matrix by printing the current Python version
      # Shows the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      # Installs dependencies
      - name: Install dependencies
        run: |
          # Upgrades pip
          python -m pip install --upgrade pip
          # If exists, install requirements.txt packages
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
     # Test with pytest
      - name: Test with pytest
        run: |
          # Install pytest and pytest-cov
          pip install pytest pytest-cov
          # Run tests
          pytest --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
      # Lint with ruff
      - name: Lint with ruff
        run: |
          # Install ruff
          pip install ruff
          # Lint with ruff
          ruff check --output-format=github .
